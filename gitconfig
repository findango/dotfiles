[user]
	name = Finlay Cannon
	useConfigOnly = true

[color]
    diff = auto
    status = auto
    branch = auto

[core]
    excludesfile = ~/.gitignore
    editor = /usr/bin/vim

[alias]
    # checkout
    co = checkout
    br = checkout -b

    # staging
    aa = add --all

    # commits
    ca = commit -a
    cm = commit -m
    cam = !git add -A && git commit -m
    amend = commit -a --amend

    # diff
    vdiff = difftool --dir-diff --symlinks
    difftool = difftool --symlinks

    # status
    stat = status
    st = status
    s = status -s
    lg = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    lgl = log --stat --abbrev-commit
    ignore = update-index --assume-unchanged
    unignore = update-index --no-assume-unchanged
    ignored = !git ls-files -v | grep ^h | cut -c 3-
    last = log -1 HEAD

    # branches
    ls = !git branch && echo # list branch names
    ll = !tput rmam && git branch -v && echo && tput smam # list branches with last commit, no wrapping in the terminal

    # stash everything to be safe
    wip = !git add -A && git commit -m "WIP"

    # soft undo the last commit, keep changes in working dir
    rollback = reset HEAD~1 --mixed
    # hard reset and discard any changes
    discard = ![[ -z "$@" ]] && git reset --hard HEAD || git checkout HEAD

    # list aliases
    la = "!git config -l | grep alias | cut -c 7-"

    stage = !sh -c '[[ -z "$@" ]] && git add -u || git add "$@" && git add -u "$@" ' -
    unstage = reset HEAD --
    unadd = rm -r --cached --

    # find commits that included a given string
    find = !git log --reverse --color -S
    contains = branch --contains

    # pull requests - pr = bitbucket/stash, ghpr = github
    pr  = "!f() { git fetch -fu ${2:-$(git remote |grep ^upstream || echo origin)} refs/pull-requests/$1/from:pr/$1 && git checkout pr/$1; }; f"
    ghpr  = "!f() { git fetch -fu ${2:-$(git remote |grep ^upstream || echo origin)} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
    pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"

[github]
    user = findango

[credential]
    helper = store

[push]
    # 'git push' will push the current branch to its tracking branch
    # the usual default is to push all branches
	default = upstream

[diff]
    tool = bc3

[difftool]
    prompt = false

[difftool "bc3"]
	trustExitCode = true

[difftool "sourcetree"]
	cmd = /usr/local/bin/ksdiff -w \"$LOCAL\" \"$REMOTE\"

[merge]
	tool = Kaleidoscope

[mergetool]
	prompt = false

[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustexitcode = true

[mergetool "sourcetree"]
	cmd = /usr/local/bin/ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true

